# SISTEMA DE FEEDBACK VENTURINI&CO - DOCUMENTA√á√ÉO COMPLETA PARA LOVABLE

## üìã VIS√ÉO GERAL DO PROJETO

### Descri√ß√£o:
Sistema completo de pesquisa de satisfa√ß√£o com dashboard administrativo avan√ßado.
Desenvolvido em Next.js 15 com TypeScript, shadcn/ui, Tailwind CSS e PostgreSQL.

### Funcionalidades Principais:
1. **Interface P√∫blica de Pesquisa**:
   - Formul√°rio em 3 etapas com indicador de progresso centralizado
   - Coleta de dados da empresa e respons√°vel
   - Avalia√ß√£o NPS (0-10) com anima√ß√£o especial para nota 10
   - Avalia√ß√£o por √°reas (Atendimento, Gest√£o de Tr√°fego, Design, Copywriting, Tecnologia, Vendas)
   - Sistema de feedback condicional (melhorias para notas 1-4, positivos para nota 5)
   - Coleta de indica√ß√µes opcionais
   - Design responsivo com anima√ß√µes suaves

2. **Dashboard Administrativo**:
   - Login protegido (senha: venturini2024)
   - Filtros avan√ßados por per√≠odo (7, 30, 90 dias, personalizado, este ano)
   - 4 abas principais: Vis√£o Geral, Timeline, Avalia√ß√£o por √Årea, Pesquisas Recentes
   - M√©tricas em tempo real (Total, NPS M√©dio, Score NPS, Promotores/Neutros/Detratores)
   - Gr√°ficos interativos (Pizza para distribui√ß√£o NPS, Barras para √°reas, Timeline)
   - Exporta√ß√£o CSV com dados filtrados
   - Interface responsiva e profissional

### Tecnologias Utilizadas:
- **Frontend**: Next.js 15.5.2, React 18, TypeScript
- **UI**: shadcn/ui, Tailwind CSS, Framer Motion
- **Backend**: Next.js API Routes
- **Banco**: PostgreSQL
- **Gr√°ficos**: Recharts
- **Icons**: Lucide React
- **Deploy**: Vercel (configurado)

### Estrutura do Banco de Dados:
- **empresas**: id, nome, responsavel, created_at
- **pesquisas**: id, empresa_id, nps, quer_indicar, created_at
- **avaliacoes**: id, pesquisa_id, area, nota, nao_se_aplica, feedback_positivo, feedback_melhoria, created_at
- **indicacoes**: id, pesquisa_id, nome, empresa, email, telefone, created_at

### Performance e Otimiza√ß√µes:
- Lazy loading de componentes pesados
- Memoiza√ß√£o com React.memo, useCallback, useMemo
- Otimiza√ß√µes Next.js (SWC, compress√£o, image optimization)
- Code splitting e dynamic imports
- Skeleton loaders e loading states

### Status Atual:
‚úÖ Sistema 100% funcional localmente
‚úÖ Dashboard com filtros por data operacional
‚úÖ C√≥digo enviado para GitHub: https://github.com/Gabriel-sv1/projetofeedback.git
‚úÖ Configurado para deploy no Vercel
‚úÖ Documenta√ß√£o completa criada
