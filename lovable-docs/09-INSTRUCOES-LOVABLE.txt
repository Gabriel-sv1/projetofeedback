# INSTRU√á√ïES PARA RECRIAR NO LOVABLE

## üéØ RESUMO EXECUTIVO

Este √© um **Sistema de Feedback Completo** desenvolvido em Next.js 15 com:
- ‚úÖ Interface p√∫blica de pesquisa em 3 etapas
- ‚úÖ Dashboard administrativo com filtros avan√ßados por data
- ‚úÖ 4 abas no admin: Vis√£o Geral, Timeline, Avalia√ß√£o por √Årea, Pesquisas Recentes
- ‚úÖ Banco PostgreSQL com 4 tabelas relacionadas
- ‚úÖ Gr√°ficos interativos (Recharts)
- ‚úÖ Sistema de feedback condicional
- ‚úÖ Anima√ß√µes e otimiza√ß√µes de performance
- ‚úÖ Design responsivo profissional

## üöÄ PASSOS PARA RECRIAR NO LOVABLE

### 1. CONFIGURA√á√ÉO INICIAL
```bash
# Criar projeto Next.js 15 com TypeScript
npx create-next-app@latest sistema-feedback --typescript --tailwind --eslint --app

# Instalar depend√™ncias principais
npm install framer-motion lucide-react recharts pg @types/pg
npm install @radix-ui/react-tabs @radix-ui/react-label @radix-ui/react-button
npm install class-variance-authority clsx tailwind-merge
```

### 2. BANCO DE DADOS (PostgreSQL)
```sql
-- Executar este script SQL completo:

CREATE TABLE empresas (
    id SERIAL PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    responsavel VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE pesquisas (
    id SERIAL PRIMARY KEY,
    empresa_id INTEGER REFERENCES empresas(id),
    nps INTEGER NOT NULL,
    quer_indicar BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE avaliacoes (
    id SERIAL PRIMARY KEY,
    pesquisa_id INTEGER REFERENCES pesquisas(id),
    area VARCHAR(100) NOT NULL,
    nota INTEGER NOT NULL,
    nao_se_aplica BOOLEAN DEFAULT FALSE,
    feedback_positivo TEXT DEFAULT '',
    feedback_melhoria TEXT DEFAULT '',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE indicacoes (
    id SERIAL PRIMARY KEY,
    pesquisa_id INTEGER REFERENCES pesquisas(id),
    nome VARCHAR(255) NOT NULL,
    empresa VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    telefone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

### 3. FUNCIONALIDADES PRINCIPAIS A IMPLEMENTAR

#### A) P√°gina Principal (app/page.tsx):
- **3 Etapas**: Dados empresa + NPS ‚Üí Avalia√ß√£o √°reas ‚Üí Indica√ß√µes
- **Indicador de Progresso**: C√≠rculos 1-2-3 centralizados no topo
- **NPS Selector**: Bot√µes 0-10 com anima√ß√£o especial para nota 10
- **Feedback Condicional**: 
  - Notas 1-4: Campo obrigat√≥rio de melhorias (vermelho)
  - Nota 5: Campo obrigat√≥rio de pontos positivos (verde)
- **6 √Åreas**: Atendimento, Gest√£o de Tr√°fego, Design, Copywriting, Tecnologia, Vendas

#### B) Dashboard Admin (app/admin/page.tsx):
- **Login**: Senha "venturini2024"
- **Filtros por Data**: Campos in√≠cio/fim + bot√µes r√°pidos (7, 30, 90 dias, este ano)
- **4 Cards de M√©tricas**: Total, NPS M√©dio, Score NPS, Promotores
- **4 Abas**:
  1. **Vis√£o Geral**: Gr√°fico pizza distribui√ß√£o NPS + resumo
  2. **Timeline**: Gr√°fico linha evolu√ß√£o temporal
  3. **Avalia√ß√£o por √Årea**: Gr√°fico barras + cards por √°rea
  4. **Pesquisas Recentes**: Tabela com badges coloridos

## ‚úÖ RESULTADO ESPERADO

Um sistema completo e profissional de feedback com:
- Interface intuitiva para coleta de pesquisas
- Dashboard administrativo robusto com an√°lises avan√ßadas
- Performance otimizada e design responsivo
- Funcionalidades avan√ßadas como filtros temporais e exporta√ß√£o
- C√≥digo limpo, documentado e escal√°vel

**Status**: Sistema 100% funcional e testado ‚úÖ
**GitHub**: https://github.com/Gabriel-sv1/projetofeedback.git
**Tecnologias**: Next.js 15, TypeScript, PostgreSQL, Tailwind, Framer Motion, Recharts
